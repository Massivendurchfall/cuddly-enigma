-- Grow a Garden Loader — redeem-first, uses syn.request/http_request/request (no direct HttpService)
-- GUI cleaned: proper layout (UIListLayout + UIPadding), readable spacing, no overlaps

-- === CONFIG ===
local API_BASE        = "https://long-recipe-73e0.dosrobert69.workers.dev/api"
local WORKINK_LINK    = "https://workink.net/22K7/b5on27ny"
local MAIN_SCRIPT_URL = "https://raw.githubusercontent.com/Massivendurchfall/cuddly-enigma/refs/heads/main/y" -- anpassen!
local LICENSE_HOURS   = 8
local SAVE_FILENAME   = "gag_key.txt"
-- === END CONFIG ===

local Players = game:GetService("Players")
local USER_ID = Players.LocalPlayer and Players.LocalPlayer.UserId or 0
local CAN_FS  = (typeof(isfile)=="function" and typeof(writefile)=="function" and typeof(readfile)=="function")

getgenv().GROW_A_GARDEN = getgenv().GROW_A_GARDEN or {}
local G = getgenv().GROW_A_GARDEN

-- ---------- Tiny JSON helpers (no HttpService) ----------
local function esc(s) s=tostring(s or "") s=s:gsub('\\','\\\\'):gsub('"','\\"'):gsub('\n','\\n'):gsub('\r','\\r'):gsub('\t','\\t'); return '"'..s..'"' end
local function json_encode(t)
    local p = {}
    for k,v in pairs(t or {}) do
        local tv = typeof(v)
        local val = (tv=="string" and esc(v)) or (tv=="number" and tostring(v)) or (tv=="boolean" and (v and "true" or "false")) or "null"
        p[#p+1] = esc(k)..":"..val
    end
    return "{"..table.concat(p,",").."}"
end
local function soft_parse(body)
    local o = {}
    if type(body)~="string" then return o end
    o.ok          = body:find('\"ok\"%s*:%s*true') ~= nil
    o.error       = body:match('\"error\"%s*:%s*\"([^\"]+)\"')
    o.license_key = body:match('\"license_key\"%s*:%s*\"([0-9a-fA-F%-]+)\"')
    return o
end

-- ---------- HTTP requester pick ----------
local function pickRequester()
    if syn and typeof(syn.request)=="function" then return syn.request end
    if http and typeof(http.request)=="function" then return http.request end
    if typeof(http_request)=="function" then return http_request end
    if typeof(request)=="function" then return request end
    return nil
end
local REQ = pickRequester()

local COMMON_HEADERS = {
    ["Content-Type"] = "application/json",
    ["User-Agent"]   = "Mozilla/5.0 (Windows NT 10.0; Win64; x64)"
}

local function httpReqJson(url, method, bodyTbl)
    if not REQ then return nil, "no_http_available" end
    local bodyStr = bodyTbl and json_encode(bodyTbl) or nil
    local ok, r = pcall(REQ, { Url=url, Method=method, Headers=COMMON_HEADERS, Body=bodyStr })
    if not ok or not r then return nil, "request_failed" end
    local status = r.StatusCode or r.Status or 0
    local body   = r.Body or ""
    local parsed = soft_parse(body)
    return { status=status, body=body, json=parsed }
end

local function urlEncode(s) s=tostring(s or "") return (s:gsub("([^%w%-_%.~])", function(c) return string.format("%%%02X", string.byte(c)) end)) end

-- ---------- API wrappers (redeem first) ----------
local function redeemToken(tok)
    local r = httpReqJson(API_BASE.."/redeem_workink.php","POST",{workink_token=tok,roblox_user_id=USER_ID,license_days=LICENSE_DAYS})
    if r and r.status>=200 and r.json and r.json.ok and r.json.license_key then return r.json.license_key,nil end
    local url = ("%s/redeem_workink.php?workink_token=%s&roblox_user_id=%d&license_days=%d"):format(API_BASE, urlEncode(tok), USER_ID, LICENSE_DAYS)
    r = httpReqJson(url,"GET")
    if r and r.status>=200 and r.json and r.json.ok and r.json.license_key then return r.json.license_key,nil end
    local err = (r and r.json and r.json.error) or (r and ("http_"..r.status)) or "network_error"
    if r and r.status==200 and (not r.json or (not r.json.ok and not r.json.error)) then
        err = "http_200 body_snip="..string.sub(r.body or "",1,120)
    end
    return nil, err
end

local function validateLicense(key)
    local r = httpReqJson(API_BASE.."/validate.php","POST",{license_key=key,roblox_user_id=USER_ID})
    if r and r.status>=200 and r.json and r.json.ok then return true,"valid" end
    local url = ("%s/validate.php?license_key=%s&roblox_user_id=%d"):format(API_BASE, urlEncode(key), USER_ID)
    r = httpReqJson(url,"GET")
    if r and r.status>=200 and r.json and r.json.ok then return true,"valid" end
    local err = (r and r.json and r.json.error) or (r and ("http_"..r.status)) or "network_error"
    if r and r.status==200 and (not r.json or (not r.json.ok and not r.json.error)) then
        err = "http_200 body_snip="..string.sub(r.body or "",1,120)
    end
    return false, err
end

-- ---------- Key cache ----------
local function loadCachedKey()
    if type(G.LICENSE_KEY)=="string" and #G.LICENSE_KEY>0 then return G.LICENSE_KEY end
    if CAN_FS and isfile(SAVE_FILENAME) then
        local ok, content = pcall(readfile, SAVE_FILENAME)
        if ok and type(content)=="string" and #content>0 then return (content:gsub("%s+$","")) end
    end
    return nil
end
local function saveCachedKey(k) G.LICENSE_KEY=k; if CAN_FS then pcall(writefile, SAVE_FILENAME, k) end end

-- ---------- UI ----------
local function createUI()
    local g=Instance.new("ScreenGui")
    g.Name="GAGKeyGate"
    g.ResetOnSpawn=false
    if syn and syn.protect_gui then pcall(syn.protect_gui,g) end
    g.Parent=game.CoreGui

    local f=Instance.new("Frame")
    f.Size=UDim2.new(0,560,0,0)
    f.AutomaticSize=Enum.AutomaticSize.Y
    f.Position=UDim2.new(0.5,-280,0.5,-150)
    f.BackgroundColor3=Color3.fromRGB(20,20,20)
    f.Active=true; f.Draggable=true; f.Parent=g
    Instance.new("UICorner",f).CornerRadius=UDim.new(0,12)

    -- Close Button
    local closeBtn = Instance.new("TextButton")
    closeBtn.Size = UDim2.new(0,28,0,28)
    closeBtn.Position = UDim2.new(1,-32,0,4)
    closeBtn.Text = "X"
    closeBtn.TextColor3 = Color3.fromRGB(255,255,255)
    closeBtn.BackgroundColor3 = Color3.fromRGB(60,60,60)
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.TextSize = 14
    closeBtn.Parent = f
    Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(1,0)
    closeBtn.MouseButton1Click:Connect(function() if g then g:Destroy() end end)

    local pad=Instance.new("UIPadding")
    pad.PaddingTop=UDim.new(0,12); pad.PaddingBottom=UDim.new(0,12)
    pad.PaddingLeft=UDim.new(0,12); pad.PaddingRight=UDim.new(0,12)
    pad.Parent=f

    local list=Instance.new("UIListLayout")
    list.FillDirection=Enum.FillDirection.Vertical
    list.SortOrder=Enum.SortOrder.LayoutOrder
    list.Padding=UDim.new(0,10)
    list.Parent=f

    -- Title
    local title=Instance.new("TextLabel")
    title.LayoutOrder=1
    title.Size=UDim2.new(1,0,0,28)
    title.Text="Universal script — License Check"
    title.TextColor3=Color3.new(1,1,1)
    title.BackgroundTransparency=1
    title.TextXAlignment=Enum.TextXAlignment.Left
    title.Font=Enum.Font.GothamBold
    title.TextSize=20
    title.Parent=f

    -- Status
    local status=Instance.new("TextLabel")
    status.LayoutOrder=2
    status.Size=UDim2.new(1,0,0,20)
    status.Text=(REQ and "Paste your license key OR your Work.ink token below.") or "Your executor blocks HTTP."
    status.TextColor3=Color3.fromRGB(200,200,200)
    status.BackgroundTransparency=1
    status.TextXAlignment=Enum.TextXAlignment.Left
    status.Font=Enum.Font.Gotham
    status.TextSize=14
    status.Name="Status"
    status.Parent=f

    -- Help panel
    local helpFrame=Instance.new("Frame")
    helpFrame.LayoutOrder=3
    helpFrame.Size=UDim2.new(1,0,0,0)
    helpFrame.AutomaticSize=Enum.AutomaticSize.Y
    helpFrame.BackgroundColor3=Color3.fromRGB(28,28,28)
    helpFrame.Parent=f
    Instance.new("UICorner",helpFrame).CornerRadius=UDim.new(0,8)

    local helpPad=Instance.new("UIPadding")
    helpPad.PaddingTop=UDim.new(0,10); helpPad.PaddingBottom=UDim.new(0,10)
    helpPad.PaddingLeft=UDim.new(0,10); helpPad.PaddingRight=UDim.new(0,10)
    helpPad.Parent=helpFrame

    local help=Instance.new("TextLabel")
    help.Size=UDim2.new(1,0,0,0)
    help.AutomaticSize=Enum.AutomaticSize.Y
    help.TextWrapped=true
    help.RichText=true
    help.TextXAlignment=Enum.TextXAlignment.Left
    help.TextYAlignment=Enum.TextYAlignment.Top
    help.TextColor3=Color3.fromRGB(220,220,220)
    help.Font=Enum.Font.Gotham
    help.TextSize=13
    help.Parent=helpFrame
    help.Text = table.concat({
        "How to get the key:",
        "\n1) Click <b>Copy Work.ink Link</b>.",
        "\n2) Open your browser and paste it into the address bar.",
        "\n3) Complete the steps until you see a <b>token</b>.",
        "\n4) Paste it below and press <b>Continue</b>."
    },"")

    -- Input
    local box=Instance.new("TextBox")
    box.LayoutOrder=4
    box.Size=UDim2.new(1,0,0,36)
    box.PlaceholderText="Paste license key OR Work.ink token here"
    box.Text=""
    box.TextColor3=Color3.new(1,1,1)
    box.BackgroundColor3=Color3.fromRGB(35,35,35)
    box.ClearTextOnFocus=false
    box.Font=Enum.Font.Gotham
    box.TextSize=14
    Instance.new("UICorner",box).CornerRadius=UDim.new(0,8)
    box.Parent=f

    -- Buttons row
    local btnRow=Instance.new("Frame")
    btnRow.LayoutOrder=5
    btnRow.Size=UDim2.new(1,0,0,36)
    btnRow.BackgroundTransparency=1
    btnRow.Parent=f

    local btnList=Instance.new("UIListLayout")
    btnList.FillDirection=Enum.FillDirection.Horizontal
    btnList.HorizontalAlignment=Enum.HorizontalAlignment.Left
    btnList.VerticalAlignment=Enum.VerticalAlignment.Center
    btnList.Padding=UDim.new(0,10)
    btnList.Parent=btnRow

    local go=Instance.new("TextButton")
    go.Size=UDim2.new(0.45,0,1,0)
    go.Text="Continue"
    go.TextColor3=Color3.new(1,1,1)
    go.BackgroundColor3=Color3.fromRGB(40,100,220)
    go.Font=Enum.Font.GothamBold
    go.TextSize=14
    Instance.new("UICorner",go).CornerRadius=UDim.new(0,8)
    go.Parent=btnRow

    local clip=Instance.new("TextButton")
    clip.Size=UDim2.new(0.45,0,1,0)
    clip.Text="Paste from Clipboard"
    clip.TextColor3=Color3.new(1,1,1)
    clip.BackgroundColor3=Color3.fromRGB(60,60,60)
    clip.Font=Enum.Font.Gotham
    clip.TextSize=14
    Instance.new("UICorner",clip).CornerRadius=UDim.new(0,8)
    clip.Parent=btnRow

    -- Copy Work.ink link
    local copyLink=Instance.new("TextButton")
    copyLink.LayoutOrder=6
    copyLink.Size=UDim2.new(1,0,0,30)
    copyLink.Text="➡ Copy Work.ink link:  "..WORKINK_LINK
    copyLink.TextColor3=Color3.fromRGB(220,220,220)
    copyLink.BackgroundColor3=Color3.fromRGB(45,45,45)
    copyLink.TextXAlignment=Enum.TextXAlignment.Left
    copyLink.Font=Enum.Font.Gotham
    copyLink.TextSize=12
    Instance.new("UICorner",copyLink).CornerRadius=UDim.new(0,6)
    copyLink.Parent=f

    copyLink.MouseButton1Click:Connect(function()
        if typeof(setclipboard)=="function" then
            pcall(setclipboard, WORKINK_LINK)
            status.Text="Link copied. Complete steps in your browser."
        else
            status.Text="Cannot copy automatically. Manually copy this link."
        end
    end)

    clip.MouseButton1Click:Connect(function()
        if typeof(getclipboard)=="function" then
            local ok,v=pcall(getclipboard)
            if ok and type(v)=="string" and #v>0 then
                box.Text=v; status.Text="Pasted from clipboard."
            else
                status.Text="Clipboard is empty."
            end
        else
            status.Text="Your executor does not support getclipboard()."
        end
    end)

    return g,status,box,go
end

local Gui, Status, InputBox, ContinueBtn = createUI()

-- Auto-validate cached key
task.spawn(function()
    local ex = loadCachedKey()
    if ex then
        Status.Text="Checking saved license key..."
        local ok, reason = validateLicense(ex)
        if ok then
            Status.Text="License valid. Loading main script..."
            saveCachedKey(ex); task.wait(0.3); if Gui then Gui:Destroy() end
            local ok2,err2=pcall(function() loadstring(game:HttpGet(MAIN_SCRIPT_URL,true))() end)
            if not ok2 then warn("Main script error: ",err2) end
        else
            Status.Text="Saved key invalid: "..tostring(reason)
        end
    end
end)

ContinueBtn.MouseButton1Click:Connect(function()
    local text = (InputBox.Text or ""):gsub("^%s+",""):gsub("%s+$","")
    if text=="" then Status.Text="Input is empty."; return end
    if not REQ then Status.Text="Cannot contact server."; return end

    Status.Text = "Redeeming your token..."
    local lic, err = redeemToken(text)
    if lic then
        InputBox.Text = lic
        Status.Text = "Your license key: "..lic
        if typeof(setclipboard)=="function" then pcall(setclipboard, lic) end
        saveCachedKey(lic); task.wait(0.6)
        Status.Text="Validating license..."
        local ok, reason = validateLicense(lic)
        if ok then
            Status.Text="License valid. Loading main script..."
            task.wait(0.3); if Gui then Gui:Destroy() end
            local ok2,err2=pcall(function() loadstring(game:HttpGet(MAIN_SCRIPT_URL,true))() end)
            if not ok2 then warn("Main script error: ",err2) end
        else
            Status.Text="Validation failed: "..tostring(reason)
        end
        return
    end

    if tostring(err):find("token_invalid") or tostring(err):find("bad_request_no_token") then
        Status.Text = "Trying as license key..."
        local ok, reason = validateLicense(text)
        if ok then
            saveCachedKey(text)
            Status.Text="License valid. Loading main script..."
            task.wait(0.3); if Gui then Gui:Destroy() end
            local ok2,err2=pcall(function() loadstring(game:HttpGet(MAIN_SCRIPT_URL,true))() end)
            if not ok2 then warn("Main script error: ",err2) end
        else
            Status.Text="License invalid: "..tostring(reason)
        end
    else
        Status.Text = "Redeem failed: "..tostring(err)
    end
end)
