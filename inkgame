local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "INK_GAME_GUI"
screenGui.Parent = playerGui

local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 260, 0, 440)
mainFrame.Position = UDim2.new(0, 50, 0, 50)
mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 25)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 12)
corner.Parent = mainFrame

local titleBar = Instance.new("Frame")
titleBar.Name = "TitleBar"
titleBar.Size = UDim2.new(1, 0, 0, 40)
titleBar.Position = UDim2.new(0, 0, 0, 0)
titleBar.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
titleBar.BorderSizePixel = 0
titleBar.Parent = mainFrame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 12)
titleCorner.Parent = titleBar

local titleBorder = Instance.new("Frame")
titleBorder.Name = "TitleBorder"
titleBorder.Size = UDim2.new(1, -20, 0, 12)
titleBorder.Position = UDim2.new(0, 10, 1, -12)
titleBorder.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
titleBorder.BorderSizePixel = 0
titleBorder.Parent = titleBar

local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "TitleLabel"
titleLabel.Size = UDim2.new(1, -50, 1, 0)
titleLabel.Position = UDim2.new(0, 15, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "INK"
titleLabel.TextColor3 = Color3.fromRGB(220, 220, 230)
titleLabel.TextSize = 16
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = titleBar

local closeButton = Instance.new("TextButton")
closeButton.Name = "CloseButton"
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -35, 0, 5)
closeButton.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
closeButton.BorderSizePixel = 0
closeButton.Text = "Ã—"
closeButton.TextColor3 = Color3.fromRGB(180, 180, 190)
closeButton.TextSize = 18
closeButton.Font = Enum.Font.GothamBold
closeButton.Parent = titleBar

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 8)
closeCorner.Parent = closeButton

local contentFrame = Instance.new("Frame")
contentFrame.Name = "ContentFrame"
contentFrame.Size = UDim2.new(1, -24, 1, -80)
contentFrame.Position = UDim2.new(0, 12, 0, 50)
contentFrame.BackgroundTransparency = 1
contentFrame.Parent = mainFrame

local statusLabel = Instance.new("TextLabel")
statusLabel.Name = "StatusLabel"
statusLabel.Size = UDim2.new(1, 0, 0, 16)
statusLabel.Position = UDim2.new(0, 0, 0, 0)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = "Click any player to select target"
statusLabel.TextColor3 = Color3.fromRGB(120, 120, 140)
statusLabel.TextSize = 11
statusLabel.Font = Enum.Font.Gotham
statusLabel.TextXAlignment = Enum.TextXAlignment.Left
statusLabel.Parent = contentFrame

local espFrame = Instance.new("Frame")
espFrame.Name = "ESPFrame"
espFrame.Size = UDim2.new(1, 0, 0, 40)
espFrame.Position = UDim2.new(0, 0, 0, 25)
espFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
espFrame.BorderSizePixel = 0
espFrame.Parent = contentFrame

local espFrameCorner = Instance.new("UICorner")
espFrameCorner.CornerRadius = UDim.new(0, 8)
espFrameCorner.Parent = espFrame

local espLabel = Instance.new("TextLabel")
espLabel.Name = "ESPLabel"
espLabel.Size = UDim2.new(1, -60, 1, 0)
espLabel.Position = UDim2.new(0, 12, 0, 0)
espLabel.BackgroundTransparency = 1
espLabel.Text = "ESP / Chams"
espLabel.TextColor3 = Color3.fromRGB(200, 200, 210)
espLabel.TextSize = 14
espLabel.Font = Enum.Font.Gotham
espLabel.TextXAlignment = Enum.TextXAlignment.Left
espLabel.Parent = espFrame

local espToggle = Instance.new("TextButton")
espToggle.Name = "ESPToggle"
espToggle.Size = UDim2.new(0, 45, 0, 24)
espToggle.Position = UDim2.new(1, -53, 0.5, -12)
espToggle.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
espToggle.BorderSizePixel = 0
espToggle.Text = ""
espToggle.Parent = espFrame

local espToggleCorner = Instance.new("UICorner")
espToggleCorner.CornerRadius = UDim.new(0, 12)
espToggleCorner.Parent = espToggle

local espKnob = Instance.new("Frame")
espKnob.Name = "ESPKnob"
espKnob.Size = UDim2.new(0, 18, 0, 18)
espKnob.Position = UDim2.new(0, 3, 0.5, -9)
espKnob.BackgroundColor3 = Color3.fromRGB(180, 180, 190)
espKnob.BorderSizePixel = 0
espKnob.Parent = espToggle

local espKnobCorner = Instance.new("UICorner")
espKnobCorner.CornerRadius = UDim.new(0, 9)
espKnobCorner.Parent = espKnob

local infJumpFrame = Instance.new("Frame")
infJumpFrame.Name = "InfJumpFrame"
infJumpFrame.Size = UDim2.new(1, 0, 0, 40)
infJumpFrame.Position = UDim2.new(0, 0, 0, 75)
infJumpFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
infJumpFrame.BorderSizePixel = 0
infJumpFrame.Parent = contentFrame

local infJumpFrameCorner = Instance.new("UICorner")
infJumpFrameCorner.CornerRadius = UDim.new(0, 8)
infJumpFrameCorner.Parent = infJumpFrame

local infJumpLabel = Instance.new("TextLabel")
infJumpLabel.Name = "InfJumpLabel"
infJumpLabel.Size = UDim2.new(1, -60, 1, 0)
infJumpLabel.Position = UDim2.new(0, 12, 0, 0)
infJumpLabel.BackgroundTransparency = 1
infJumpLabel.Text = "Infinite Jump"
infJumpLabel.TextColor3 = Color3.fromRGB(200, 200, 210)
infJumpLabel.TextSize = 14
infJumpLabel.Font = Enum.Font.Gotham
infJumpLabel.TextXAlignment = Enum.TextXAlignment.Left
infJumpLabel.Parent = infJumpFrame

local infJumpToggle = Instance.new("TextButton")
infJumpToggle.Name = "InfJumpToggle"
infJumpToggle.Size = UDim2.new(0, 45, 0, 24)
infJumpToggle.Position = UDim2.new(1, -53, 0.5, -12)
infJumpToggle.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
infJumpToggle.BorderSizePixel = 0
infJumpToggle.Text = ""
infJumpToggle.Parent = infJumpFrame

local infJumpToggleCorner = Instance.new("UICorner")
infJumpToggleCorner.CornerRadius = UDim.new(0, 12)
infJumpToggleCorner.Parent = infJumpToggle

local infJumpKnob = Instance.new("Frame")
infJumpKnob.Name = "InfJumpKnob"
infJumpKnob.Size = UDim2.new(0, 18, 0, 18)
infJumpKnob.Position = UDim2.new(0, 3, 0.5, -9)
infJumpKnob.BackgroundColor3 = Color3.fromRGB(180, 180, 190)
infJumpKnob.BorderSizePixel = 0
infJumpKnob.Parent = infJumpToggle

local infJumpKnobCorner = Instance.new("UICorner")
infJumpKnobCorner.CornerRadius = UDim.new(0, 9)
infJumpKnobCorner.Parent = infJumpKnob

local noclipFrame = Instance.new("Frame")
noclipFrame.Name = "NoclipFrame"
noclipFrame.Size = UDim2.new(1, 0, 0, 40)
noclipFrame.Position = UDim2.new(0, 0, 0, 125)
noclipFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
noclipFrame.BorderSizePixel = 0
noclipFrame.Parent = contentFrame

local noclipFrameCorner = Instance.new("UICorner")
noclipFrameCorner.CornerRadius = UDim.new(0, 8)
noclipFrameCorner.Parent = noclipFrame

local noclipLabel = Instance.new("TextLabel")
noclipLabel.Name = "NoclipLabel"
noclipLabel.Size = UDim2.new(1, -60, 1, 0)
noclipLabel.Position = UDim2.new(0, 12, 0, 0)
noclipLabel.BackgroundTransparency = 1
noclipLabel.Text = "Noclip"
noclipLabel.TextColor3 = Color3.fromRGB(200, 200, 210)
noclipLabel.TextSize = 14
noclipLabel.Font = Enum.Font.Gotham
noclipLabel.TextXAlignment = Enum.TextXAlignment.Left
noclipLabel.Parent = noclipFrame

local noclipToggle = Instance.new("TextButton")
noclipToggle.Name = "NoclipToggle"
noclipToggle.Size = UDim2.new(0, 45, 0, 24)
noclipToggle.Position = UDim2.new(1, -53, 0.5, -12)
noclipToggle.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
noclipToggle.BorderSizePixel = 0
noclipToggle.Text = ""
noclipToggle.Parent = noclipFrame

local noclipToggleCorner = Instance.new("UICorner")
noclipToggleCorner.CornerRadius = UDim.new(0, 12)
noclipToggleCorner.Parent = noclipToggle

local noclipKnob = Instance.new("Frame")
noclipKnob.Name = "NoclipKnob"
noclipKnob.Size = UDim2.new(0, 18, 0, 18)
noclipKnob.Position = UDim2.new(0, 3, 0.5, -9)
noclipKnob.BackgroundColor3 = Color3.fromRGB(180, 180, 190)
noclipKnob.BorderSizePixel = 0
noclipKnob.Parent = noclipToggle

local noclipKnobCorner = Instance.new("UICorner")
noclipKnobCorner.CornerRadius = UDim.new(0, 9)
noclipKnobCorner.Parent = noclipKnob

local teleportFrame = Instance.new("Frame")
teleportFrame.Name = "TeleportFrame"
teleportFrame.Size = UDim2.new(1, 0, 0, 40)
teleportFrame.Position = UDim2.new(0, 0, 0, 175)
teleportFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
teleportFrame.BorderSizePixel = 0
teleportFrame.Parent = contentFrame

local teleportCorner = Instance.new("UICorner")
teleportCorner.CornerRadius = UDim.new(0, 8)
teleportCorner.Parent = teleportFrame

local redLightButton = Instance.new("TextButton")
redLightButton.Name = "RedLightButton"
redLightButton.Size = UDim2.new(0.48, 0, 0, 28)
redLightButton.Position = UDim2.new(0, 8, 0.5, -14)
redLightButton.BackgroundColor3 = Color3.fromRGB(70, 130, 255)
redLightButton.BorderSizePixel = 0
redLightButton.Text = "Red Light"
redLightButton.TextColor3 = Color3.fromRGB(255, 255, 255)
redLightButton.TextSize = 12
redLightButton.Font = Enum.Font.GothamBold
redLightButton.Parent = teleportFrame

local redLightButtonCorner = Instance.new("UICorner")
redLightButtonCorner.CornerRadius = UDim.new(0, 6)
redLightButtonCorner.Parent = redLightButton

local teleportButton = Instance.new("TextButton")
teleportButton.Name = "TeleportButton"
teleportButton.Size = UDim2.new(0.48, 0, 0, 28)
teleportButton.Position = UDim2.new(0.52, 0, 0.5, -14)
teleportButton.BackgroundColor3 = Color3.fromRGB(70, 130, 255)
teleportButton.BorderSizePixel = 0
teleportButton.Text = "Glass End"
teleportButton.TextColor3 = Color3.fromRGB(255, 255, 255)
teleportButton.TextSize = 12
teleportButton.Font = Enum.Font.GothamBold
teleportButton.Parent = teleportFrame

local teleportButtonCorner = Instance.new("UICorner")
teleportButtonCorner.CornerRadius = UDim.new(0, 6)
teleportButtonCorner.Parent = teleportButton

local walkSpeedFrame = Instance.new("Frame")
walkSpeedFrame.Name = "WalkSpeedFrame"
walkSpeedFrame.Size = UDim2.new(1, 0, 0, 50)
walkSpeedFrame.Position = UDim2.new(0, 0, 0, 225)
walkSpeedFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
walkSpeedFrame.BorderSizePixel = 0
walkSpeedFrame.Parent = contentFrame

local walkSpeedFrameCorner = Instance.new("UICorner")
walkSpeedFrameCorner.CornerRadius = UDim.new(0, 8)
walkSpeedFrameCorner.Parent = walkSpeedFrame

local walkSpeedLabel = Instance.new("TextLabel")
walkSpeedLabel.Name = "WalkSpeedLabel"
walkSpeedLabel.Size = UDim2.new(1, -50, 0, 20)
walkSpeedLabel.Position = UDim2.new(0, 12, 0, 8)
walkSpeedLabel.BackgroundTransparency = 1
walkSpeedLabel.Text = "Walk Speed"
walkSpeedLabel.TextColor3 = Color3.fromRGB(200, 200, 210)
walkSpeedLabel.TextSize = 14
walkSpeedLabel.Font = Enum.Font.Gotham
walkSpeedLabel.TextXAlignment = Enum.TextXAlignment.Left
walkSpeedLabel.Parent = walkSpeedFrame

local walkSpeedValue = Instance.new("TextLabel")
walkSpeedValue.Name = "WalkSpeedValue"
walkSpeedValue.Size = UDim2.new(0, 35, 0, 20)
walkSpeedValue.Position = UDim2.new(1, -47, 0, 8)
walkSpeedValue.BackgroundTransparency = 1
walkSpeedValue.Text = "25"
walkSpeedValue.TextColor3 = Color3.fromRGB(70, 130, 255)
walkSpeedValue.TextSize = 14
walkSpeedValue.Font = Enum.Font.GothamBold
walkSpeedValue.TextXAlignment = Enum.TextXAlignment.Center
walkSpeedValue.Parent = walkSpeedFrame

local walkSpeedSlider = Instance.new("Frame")
walkSpeedSlider.Name = "WalkSpeedSlider"
walkSpeedSlider.Size = UDim2.new(1, -24, 0, 6)
walkSpeedSlider.Position = UDim2.new(0, 12, 0, 35)
walkSpeedSlider.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
walkSpeedSlider.BorderSizePixel = 0
walkSpeedSlider.Parent = walkSpeedFrame

local walkSpeedSliderCorner = Instance.new("UICorner")
walkSpeedSliderCorner.CornerRadius = UDim.new(0, 3)
walkSpeedSliderCorner.Parent = walkSpeedSlider

local walkSpeedKnob = Instance.new("TextButton")
walkSpeedKnob.Name = "WalkSpeedKnob"
walkSpeedKnob.Size = UDim2.new(0, 16, 0, 16)
walkSpeedKnob.Position = UDim2.new(0.11, -8, 0.5, -8)
walkSpeedKnob.BackgroundColor3 = Color3.fromRGB(70, 130, 255)
walkSpeedKnob.BorderSizePixel = 0
walkSpeedKnob.Text = ""
walkSpeedKnob.Parent = walkSpeedSlider

local walkSpeedKnobCorner = Instance.new("UICorner")
walkSpeedKnobCorner.CornerRadius = UDim.new(0, 8)
walkSpeedKnobCorner.Parent = walkSpeedKnob

local aimFrame = Instance.new("Frame")
aimFrame.Name = "AimFrame"
aimFrame.Size = UDim2.new(1, 0, 0, 85)
aimFrame.Position = UDim2.new(0, 0, 0, 285)
aimFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
aimFrame.BorderSizePixel = 0
aimFrame.Parent = contentFrame

local aimFrameCorner = Instance.new("UICorner")
aimFrameCorner.CornerRadius = UDim.new(0, 8)
aimFrameCorner.Parent = aimFrame

local aimLabel = Instance.new("TextLabel")
aimLabel.Name = "AimLabel"
aimLabel.Size = UDim2.new(1, -60, 0, 20)
aimLabel.Position = UDim2.new(0, 12, 0, 8)
aimLabel.BackgroundTransparency = 1
aimLabel.Text = "Aim Assist"
aimLabel.TextColor3 = Color3.fromRGB(200, 200, 210)
aimLabel.TextSize = 14
aimLabel.Font = Enum.Font.Gotham
aimLabel.TextXAlignment = Enum.TextXAlignment.Left
aimLabel.Parent = aimFrame

local aimToggle = Instance.new("TextButton")
aimToggle.Name = "AimToggle"
aimToggle.Size = UDim2.new(0, 45, 0, 24)
aimToggle.Position = UDim2.new(1, -53, 0, 6)
aimToggle.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
aimToggle.BorderSizePixel = 0
aimToggle.Text = ""
aimToggle.Parent = aimFrame

local aimToggleCorner = Instance.new("UICorner")
aimToggleCorner.CornerRadius = UDim.new(0, 12)
aimToggleCorner.Parent = aimToggle

local aimKnob = Instance.new("Frame")
aimKnob.Name = "AimKnob"
aimKnob.Size = UDim2.new(0, 18, 0, 18)
aimKnob.Position = UDim2.new(0, 3, 0.5, -9)
aimKnob.BackgroundColor3 = Color3.fromRGB(180, 180, 190)
aimKnob.BorderSizePixel = 0
aimKnob.Parent = aimToggle

local aimKnobCorner = Instance.new("UICorner")
aimKnobCorner.CornerRadius = UDim.new(0, 9)
aimKnobCorner.Parent = aimKnob

local aimInput = Instance.new("TextBox")
aimInput.Name = "AimInput"
aimInput.Size = UDim2.new(1, -24, 0, 26)
aimInput.Position = UDim2.new(0, 12, 0, 32)
aimInput.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
aimInput.BorderSizePixel = 0
aimInput.Text = ""
aimInput.PlaceholderText = "Click on Player..."
aimInput.TextColor3 = Color3.fromRGB(200, 200, 210)
aimInput.PlaceholderColor3 = Color3.fromRGB(120, 120, 140)
aimInput.TextSize = 12
aimInput.Font = Enum.Font.Gotham
aimInput.TextXAlignment = Enum.TextXAlignment.Left
aimInput.Parent = aimFrame

local aimInputCorner = Instance.new("UICorner")
aimInputCorner.CornerRadius = UDim.new(0, 6)
aimInputCorner.Parent = aimInput

local aimStatus = Instance.new("TextLabel")
aimStatus.Name = "AimStatus"
aimStatus.Size = UDim2.new(1, -24, 0, 12)
aimStatus.Position = UDim2.new(0, 12, 0, 65)
aimStatus.BackgroundTransparency = 1
aimStatus.Text = "No target"
aimStatus.TextColor3 = Color3.fromRGB(120, 120, 140)
aimStatus.TextSize = 10
aimStatus.Font = Enum.Font.Gotham
aimStatus.TextXAlignment = Enum.TextXAlignment.Left
aimStatus.Parent = aimFrame

local creditsLabel = Instance.new("TextLabel")
creditsLabel.Name = "CreditsLabel"
creditsLabel.Size = UDim2.new(1, 0, 0, 20)
creditsLabel.Position = UDim2.new(0, 0, 1, -20)
creditsLabel.BackgroundTransparency = 1
creditsLabel.Text = "made by jlcfg"
creditsLabel.TextColor3 = Color3.fromRGB(80, 80, 100)
creditsLabel.TextSize = 10
creditsLabel.Font = Enum.Font.Gotham
creditsLabel.TextXAlignment = Enum.TextXAlignment.Center
creditsLabel.Parent = mainFrame

local infJumpEnabled = false
local noclipEnabled = false
local currentWalkSpeed = 25
local espEnabled = false
local aimEnabled = false
local targetPlayer = nil
local connections = {}
local espHighlights = {}

local function updateToggleAppearance(toggle, knob, enabled)
    local t = TweenInfo.new(0.2, Enum.EasingStyle.Quart, Enum.EasingDirection.Out)
    if enabled then
        toggle.BackgroundColor3 = Color3.fromRGB(70, 130, 255)
        knob.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TweenService:Create(knob, t, {Position = UDim2.new(1, -21, 0.5, -9)}):Play()
    else
        toggle.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
        knob.BackgroundColor3 = Color3.fromRGB(180, 180, 190)
        TweenService:Create(knob, t, {Position = UDim2.new(0, 3, 0.5, -9)}):Play()
    end
end

local function findPlayerByName(name)
    for _, p in pairs(Players:GetPlayers()) do
        if p.Name:lower():find(name:lower()) or p.DisplayName:lower():find(name:lower()) then
            return p
        end
    end
    return nil
end

local function createChamsBox(character)
    if not character or character:FindFirstChild("ESP_Highlight") then return end
    local highlight = Instance.new("Highlight")
    highlight.Name = "ESP_Highlight"
    highlight.Adornee = character
    highlight.FillColor = Color3.fromRGB(255, 100, 100)
    highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    highlight.FillTransparency = 0.4
    highlight.OutlineTransparency = 0
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    highlight.Parent = character
    table.insert(espHighlights, highlight)
    return highlight
end

local function createSelectionBox(character)
    if not character or character:FindFirstChild("ESP_SelectionBox") then return end
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    local selectionBox = Instance.new("SelectionBox")
    selectionBox.Name = "ESP_SelectionBox"
    selectionBox.Adornee = hrp
    selectionBox.Color3 = Color3.fromRGB(0, 255, 255)
    selectionBox.LineThickness = 0.15
    selectionBox.Transparency = 0
    selectionBox.Parent = workspace
    table.insert(espHighlights, selectionBox)
    return selectionBox
end

local function addESPToPlayer(tp)
    if not tp or not tp.Character then return end
    local c = tp.Character
    if c:FindFirstChild("ESP_Highlight") then return end
    createChamsBox(c)
    createSelectionBox(c)
    local head = c:FindFirstChild("Head")
    if head and not head:FindFirstChild("ESP_NameGui") then
        local billboardGui = Instance.new("BillboardGui")
        billboardGui.Name = "ESP_NameGui"
        billboardGui.Adornee = head
        billboardGui.Size = UDim2.new(0, 200, 0, 30)
        billboardGui.StudsOffset = Vector3.new(0, 2, 0)
        billboardGui.AlwaysOnTop = true
        billboardGui.Parent = workspace
        local nameLabel = Instance.new("TextLabel")
        nameLabel.Size = UDim2.new(1, 0, 1, 0)
        nameLabel.BackgroundTransparency = 1
        nameLabel.Text = tp.Name
        nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
        nameLabel.TextSize = 12
        nameLabel.Font = Enum.Font.GothamBold
        nameLabel.TextStrokeTransparency = 0
        nameLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
        nameLabel.TextYAlignment = Enum.TextYAlignment.Center
        nameLabel.Parent = billboardGui
        table.insert(espHighlights, billboardGui)
    end
    local hrp = c:FindFirstChild("HumanoidRootPart")
    if hrp and not hrp:FindFirstChild("ESP_DistanceGui") then
        local distanceGui = Instance.new("BillboardGui")
        distanceGui.Name = "ESP_DistanceGui"
        distanceGui.Adornee = hrp
        distanceGui.Size = UDim2.new(0, 100, 0, 20)
        distanceGui.StudsOffset = Vector3.new(0, -3, 0)
        distanceGui.AlwaysOnTop = true
        distanceGui.Parent = workspace
        local distanceLabel = Instance.new("TextLabel")
        distanceLabel.Size = UDim2.new(1, 0, 1, 0)
        distanceLabel.BackgroundTransparency = 1
        distanceLabel.Text = "0m"
        distanceLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
        distanceLabel.TextSize = 10
        distanceLabel.Font = Enum.Font.GothamBold
        distanceLabel.TextStrokeTransparency = 0
        distanceLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
        distanceLabel.Parent = distanceGui
        local dc
        dc = RunService.Heartbeat:Connect(function()
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") and c.Parent and hrp.Parent then
                local d = (player.Character.HumanoidRootPart.Position - hrp.Position).Magnitude
                distanceLabel.Text = tostring(math.floor(d)) .. "m"
            else
                if dc then dc:Disconnect() end
                if distanceGui.Parent then distanceGui:Destroy() end
            end
        end)
        table.insert(espHighlights, distanceGui)
    end
end

local function removeAllESP()
    for _, h in pairs(espHighlights) do
        if h and h.Parent then h:Destroy() end
    end
    espHighlights = {}
    for _, p in pairs(Players:GetPlayers()) do
        if p.Character then
            local a = p.Character:FindFirstChild("ESP_Highlight")
            if a then a:Destroy() end
        end
    end
    for _, obj in pairs(workspace:GetChildren()) do
        if obj.Name == "ESP_NameGui" or obj.Name == "ESP_DistanceGui" or obj.Name == "ESP_SelectionBox" then
            obj:Destroy()
        end
    end
end

local function toggleESP()
    espEnabled = not espEnabled
    updateToggleAppearance(espToggle, espKnob, espEnabled)
    if espEnabled then
        for _, p in pairs(Players:GetPlayers()) do
            if p ~= player then
                if p.Character then
                    addESPToPlayer(p)
                else
                    task.spawn(function()
                        p.CharacterAdded:Wait()
                        task.wait(0.5)
                        if espEnabled then addESPToPlayer(p) end
                    end)
                end
            end
        end
    else
        removeAllESP()
    end
end

local function setupInfJump()
    if infJumpEnabled then
        connections.infJump = UserInputService.JumpRequest:Connect(function()
            local c = player.Character
            if c and c:FindFirstChild("Humanoid") then
                c.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end)
    else
        if connections.infJump then connections.infJump:Disconnect() connections.infJump = nil end
    end
end

local function setupWalkSpeed()
    if connections.walkSpeed then connections.walkSpeed:Disconnect() end
    connections.walkSpeed = RunService.Heartbeat:Connect(function()
        local c = player.Character
        if c and c:FindFirstChild("Humanoid") then
            c.Humanoid.WalkSpeed = currentWalkSpeed
        end
    end)
end

local function setupNoclip()
    if noclipEnabled then
        connections.noclip = RunService.Stepped:Connect(function()
            local c = player.Character
            if c then
                for _, d in pairs(c:GetDescendants()) do
                    if d:IsA("BasePart") then
                        d.CanCollide = false
                    end
                end
            end
        end)
    else
        if connections.noclip then connections.noclip:Disconnect() connections.noclip = nil end
        local c = player.Character
        if c then
            for _, d in pairs(c:GetDescendants()) do
                if d:IsA("BasePart") then
                    if d.Name == "HumanoidRootPart" then
                        d.CanCollide = false
                    else
                        d.CanCollide = true
                    end
                end
            end
        end
    end
end

local function startAimAssist()
    if connections.aim then connections.aim:Disconnect() connections.aim = nil end
    if not aimEnabled then aimStatus.Text = "Aim Assist off"; return end
    connections.aim = RunService.Heartbeat:Connect(function(dt)
        local myC = player.Character
        local tgt = targetPlayer and targetPlayer.Character or nil
        if not myC or not tgt then aimStatus.Text = "No target"; return end
        local myHRP = myC:FindFirstChild("HumanoidRootPart")
        local tHRP = tgt:FindFirstChild("HumanoidRootPart")
        if not myHRP or not tHRP then return end
        local vel = tHRP.AssemblyLinearVelocity or Vector3.zero
        local dist = (myHRP.Position - tHRP.Position).Magnitude
        local lead = math.clamp(dist / math.max(currentWalkSpeed, 1), 0.02, 0.2)
        local targetPos = tHRP.Position + vel * lead + Vector3.new(0, 1.2, 0)
        local dir = (targetPos - myHRP.Position).Unit
        local fovDeg = 90
        local ang = math.deg(math.acos(math.clamp(myHRP.CFrame.LookVector:Dot(dir), -1, 1)))
        if ang <= fovDeg then
            local smooth = 0.35
            local newLook = (myHRP.CFrame.LookVector:Lerp(dir, math.clamp(smooth, 0, 1))).Unit
            local newCFrame = CFrame.new(myHRP.Position, myHRP.Position + newLook)
            myHRP.CFrame = newCFrame
            local cam = workspace.CurrentCamera
            if cam then
                cam.CFrame = CFrame.new(cam.CFrame.Position, targetPos)
            end
            aimStatus.Text = "Aiming: " .. targetPlayer.DisplayName
        else
            aimStatus.Text = "Out of FOV"
        end
    end)
end

local clickToSelectEnabled = true

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if input.UserInputType == Enum.UserInputType.MouseButton1 and not gameProcessed and clickToSelectEnabled then
        local mouse = player:GetMouse()
        if not mouse then return end
        local target = mouse.Target
        if target then
            local clickedPlayer = nil
            local parent = target.Parent
            while parent and parent ~= workspace do
                if parent:FindFirstChild("Humanoid") and parent:FindFirstChild("Head") then
                    clickedPlayer = Players:GetPlayerFromCharacter(parent)
                    break
                end
                parent = parent.Parent
            end
            if clickedPlayer and clickedPlayer ~= player then
                aimInput.Text = clickedPlayer.Name
                aimStatus.Text = "Selected: " .. clickedPlayer.DisplayName
                targetPlayer = clickedPlayer
                local character = clickedPlayer.Character
                if character and character:FindFirstChild("Head") then
                    local head = character.Head
                    local selectionBox = Instance.new("SelectionBox")
                    selectionBox.Adornee = head
                    selectionBox.Color3 = Color3.fromRGB(0, 255, 0)
                    selectionBox.LineThickness = 0.2
                    selectionBox.Transparency = 0.5
                    selectionBox.Parent = head
                    game:GetService("Debris"):AddItem(selectionBox, 1)
                end
            end
        end
    end
end)

espToggle.MouseButton1Click:Connect(function()
    toggleESP()
end)

infJumpToggle.MouseButton1Click:Connect(function()
    infJumpEnabled = not infJumpEnabled
    updateToggleAppearance(infJumpToggle, infJumpKnob, infJumpEnabled)
    setupInfJump()
end)

noclipToggle.MouseButton1Click:Connect(function()
    noclipEnabled = not noclipEnabled
    updateToggleAppearance(noclipToggle, noclipKnob, noclipEnabled)
    setupNoclip()
end)

aimToggle.MouseButton1Click:Connect(function()
    aimEnabled = not aimEnabled
    updateToggleAppearance(aimToggle, aimKnob, aimEnabled)
    startAimAssist()
end)

aimInput.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        local n = aimInput.Text
        if n == "" then
            targetPlayer = nil
            aimStatus.Text = "No target"
            return
        end
        local p = findPlayerByName(n)
        if p and p ~= player then
            targetPlayer = p
            aimStatus.Text = "Selected: " .. p.DisplayName
        else
            aimStatus.Text = "Player not found"
        end
    end
end)

redLightButton.MouseButton1Click:Connect(function()
    local c = player.Character
    if c and c:FindFirstChild("HumanoidRootPart") then
        c.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-49.88, 1023.10, 83.59))
    end
end)

teleportButton.MouseButton1Click:Connect(function()
    local c = player.Character
    if c and c:FindFirstChild("HumanoidRootPart") then
        c.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-215.15, 520.73, -1534.37))
    end
end)

local dragging = false

walkSpeedKnob.MouseButton1Down:Connect(function()
    dragging = true
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local mouse = player:GetMouse()
        local mousePos = Vector2.new(mouse.X, mouse.Y)
        local sliderPos = walkSpeedSlider.AbsolutePosition
        local sliderSize = walkSpeedSlider.AbsoluteSize
        local relativeX = mousePos.X - sliderPos.X
        local clampedX = math.max(0, math.min(relativeX, sliderSize.X))
        local percentage = clampedX / sliderSize.X
        walkSpeedKnob.Position = UDim2.new(percentage, -8, 0.5, -8)
        currentWalkSpeed = math.floor(16 + (percentage * 84))
        walkSpeedValue.Text = tostring(currentWalkSpeed)
    end
end)

closeButton.MouseEnter:Connect(function()
    closeButton.BackgroundColor3 = Color3.fromRGB(220, 53, 69)
end)

closeButton.MouseLeave:Connect(function()
    closeButton.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
end)

redLightButton.MouseEnter:Connect(function()
    redLightButton.BackgroundColor3 = Color3.fromRGB(90, 150, 255)
end)

redLightButton.MouseLeave:Connect(function()
    redLightButton.BackgroundColor3 = Color3.fromRGB(70, 130, 255)
end)

teleportButton.MouseEnter:Connect(function()
    teleportButton.BackgroundColor3 = Color3.fromRGB(90, 150, 255)
end)

teleportButton.MouseLeave:Connect(function()
    teleportButton.BackgroundColor3 = Color3.fromRGB(70, 130, 255)
end)

closeButton.MouseButton1Click:Connect(function()
    for _, connection in pairs(connections) do
        if connection then connection:Disconnect() end
    end
    if connections.aim then connections.aim:Disconnect() end
    removeAllESP()
    if noclipEnabled then
        local c = player.Character
        if c then
            for _, part in pairs(c:GetChildren()) do
                if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                    part.CanCollide = true
                end
            end
        end
    end
    screenGui:Destroy()
end)

Players.PlayerAdded:Connect(function(newPlayer)
    if espEnabled then
        newPlayer.CharacterAdded:Connect(function()
            task.wait(0.5)
            if espEnabled then addESPToPlayer(newPlayer) end
        end)
        if newPlayer.Character then
            task.wait(0.5)
            if espEnabled then addESPToPlayer(newPlayer) end
        end
    end
end)

Players.PlayerRemoving:Connect(function(removedPlayer)
    if targetPlayer == removedPlayer then
        targetPlayer = nil
        aimStatus.Text = "Target left"
    end
end)

player.CharacterAdded:Connect(function()
    task.wait(1)
    setupWalkSpeed()
    if infJumpEnabled then setupInfJump() end
    if noclipEnabled then setupNoclip() end
end)

for _, p in pairs(Players:GetPlayers()) do
    if p ~= player then
        p.CharacterAdded:Connect(function()
            if espEnabled then
                task.wait(0.5)
                addESPToPlayer(p)
            end
        end)
    end
end

setupWalkSpeed()
